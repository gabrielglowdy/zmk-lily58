/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 11>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | GUI  | ALT  | LOWER|  SPACE |  | SPACE | RAISE| ENTER | GUI   |

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                          &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB         &kp Q   &kp W   &kp E     &kp R     &kp T                           &kp Y      &kp U   &kp I      &kp O    &kp P     &kp DEL
&kp LEFT_SHIFT  &kp A   &kp S   &kp D     &kp F     &kp G                           &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT     &kp RBKT   &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp CAPS
                                &kp LGUI  &kp LALT  &mo 1   &kp SPACE    &kp SPACE  &kp ENTER  &mo 2   &tog 3
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans          &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                          &kp F6       &kp F7            &kp F8             &kp F9     &kp F10        &kp BACKSPACE
&kp GRAVE       &kp F11  &kp F12  &trans  &trans  &trans                          &trans       &trans            &kp UP_ARROW       &trans     &trans         &kp BACKSPACE
&kp LEFT_SHIFT  &trans   &trans   &trans  &trans  &trans                          &trans       &kp LEFT          &kp DOWN           &kp RIGHT  &trans         &trans
&trans          &trans   &trans   &trans  &trans  &trans  &kp MINUS    &kp EQUAL  &kp KP_PLUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none      &kp BACKSLASH  &trans
                                  &trans  &trans  &trans  &trans       &kp PIPE   &trans       &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                        &trans     &trans     &trans           &trans    &sys_reset  &bootloader
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                              &kp F7     &kp F8     &kp F9           &kp F10   &kp F11     &kp F12
&kp GRAVE       &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                                           &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp TILDE
&studio_unlock  &trans        &trans        &trans        &trans        &trans        &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &kp PIPE   &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC    &soft_off
                                            &trans        &trans        &trans        &trans               &kp PIPE         &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans           &trans  &ext_power EP_TOG
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans
            >;
        };
    };
};
